// <auto-generated />
using System;
using CoreWebApi.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoreWebApi.Migrations
{
    [DbContext(typeof(EntranceContext))]
    [Migration("20181231103520_AddCompanySeedData")]
    partial class AddCompanySeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CoreWebApi.Entities.Company", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Name");

                    b.ToTable("Companies");

                    b.HasData(
                        new { Name = "Alibaba" },
                        new { Name = "百度" },
                        new { Name = "腾讯" }
                    );
                });

            modelBuilder.Entity("CoreWebApi.Entities.DeletedToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Exp");

                    b.Property<string>("Jti")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("Jti");

                    b.ToTable("DeletedTokens");
                });

            modelBuilder.Entity("CoreWebApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CompanyName");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasAlternateKey("UserName");

                    b.HasIndex("CompanyName");

                    b.ToTable("Users");

                    b.HasData(
                        new { Id = 1, CompanyName = "Alibaba", Password = "admin", UserName = "admin" },
                        new { Id = 2, CompanyName = "百度", Password = "123", UserName = "张三" },
                        new { Id = 3, CompanyName = "腾讯", Password = "123", UserName = "李四" }
                    );
                });

            modelBuilder.Entity("CoreWebApi.Entities.User", b =>
                {
                    b.HasOne("CoreWebApi.Entities.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyName")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
