Docker 启动centos镜像
docker run -it centos /bin/bash
修改root密码
#yum install passwd
passwd

Docker 保存容器为镜像
docker commit -m="root password" -a="dirtyindustry" 8cf6a9e8d96b mycentos:v1

Docker 加载镜像
docker run --privileged -e "container=docker" -it -p 80:80 -p 3306:3306 --name lampcore mycentos:v1 /usr/sbin/init
docker run -it -p 80:80 -p 3306:3306 --name lampcore dirtylamp /bin/bash

Docker 保存镜像为文件
docker save 镜像名 > 文件名.tar
docker save --output 文件名.tar 镜像名

Docker 从文件中读取镜像
docker load < 文件名.tar
docker load --input 文件名.tar

Docker 映射主机文件和目录到容器
docker run -p 80:80 -v ${PWD}/www/:/var/www/html/ -v ${PWD}/conf/httpd.conf:/usr/local/apache2/conf/httpd.conf -d httpd
# -p 80:80 将容器80端口映射到主机80端口
# -v ${PWD}/www/:/var/www/html/ 将主机当前目录下的www目录挂载到容器的/var/www/html/
# -v ${PWD}/conf/httpd.conf:/usr/local/apache2/conf/httpd.conf 将主机当前目录下的conf/httpd.conf文件挂载到容器的/usr/local/apache2/conf/httpd.conf

Docker 进入已运行的容器
docker exec -it 容器名 /bin/bash

Docker 由dockerfile构建image
docker build -t 镜像名 .

Docker 运行yml文件
docker-compose -f 文件名.yml up -d

Docker 用link方法运行mysql和phpmyadmin
# 创建容器server-mysql
docker run --name server-mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -d mysql:5.6
# 创建容器server-phpmyadmin
docker run --name server-phpmyadmin -p 8080:80 --link server-mysql:db -d phpmyadmin/phpmyadmin:latest

Docker 用network方法运行mysql和phpmyadmin
# 创建网络net-mysql
docker network create net-mysql
# 创建容器server-mysql并加入网络net-mysql
docker run --restart always --name server-mysql -e MYSQL_USER=root -e MYSQL_PASSWORD=root -e MYSQL_ROOT_PASSWORD=root -p 3306:3306 --network net-mysql -d mysql:5.6
# 创建容器server-phpmyadmin并加入网络net-mysql
docker run --name server-phpmyadmin -e MYSQL_USER=root -e MYSQL_PASSWORD=root -e MYSQL_ROOT_PASSWORD=root -e PMA_HOST=server-mysql -p 8080:80 --network net-mysql -d phpmyadmin/phpmyadmin:latest

Docker 在容器内部保持容器运行状态退出容器
Ctrl + P, Ctrl + Q

Docker 运行redis并启用密码
docker run --name 容器名 -p 端口号:6379 -d --restart=always redis:latest redis-server --appendonly yes --requirepass "密码"
